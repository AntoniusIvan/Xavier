@page "/login"
@using HybridDMS.Components.Helpers
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using System.Text
@inject HttpClient HttpClient

<h1>Login</h1>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleValidSubmit()
    {
        // Construct the URL using UriHelper
        var tokenEndpoint = UriHelper.CombineUri("https://ijcowa.azurewebsites.net/", "token");

        // Create the query parameters
        var queryParams = new Dictionary<string, string>
            {
                { "username", loginModel.Username },
                { "password", loginModel.Password },
                { "grant_type", "password" }
            };

        // Build the query string
        var queryString = string.Join("&", queryParams.Select(kvp => $"{Uri.EscapeDataString(kvp.Key)}={Uri.EscapeDataString(kvp.Value)}"));

        // Combine the URL and query string
        tokenEndpoint = $"{tokenEndpoint}?{queryString}";

        // Combine the URL and query parameters
        //var fullUrl = UriHelper.CombineUri(tokenEndpoint);


        // Make the request
        var responseJson = await HttpClient.PostAsync(tokenEndpoint, null);

        if (responseJson.IsSuccessStatusCode)
        {
            var tokenResponse = await responseJson.Content.ReadAsStringAsync();
            // Deserialize tokenResponse if necessary using System.Text.Json.JsonSerializer
            // For example: var token = System.Text.Json.JsonSerializer.Deserialize<TokenResponse>(tokenResponse);
            //password = tokenResponse;
        }
        else
        {
            // Handle the error, for example, show a validation message
        }
        // Create the JSON payload
        var jsonPayload = new
        {
            app_id = "apiadmin@fonusa.co.id",
            app_secret = "i8Gf8kY82mG0XJII"
        };

        try
        {
            // Convert the payload to a JSON string
            var jsonString = JsonSerializer.Serialize(jsonPayload);

            // Create an HttpRequestMessage with the necessary details
            var request = new HttpRequestMessage
                {
                    Method = HttpMethod.Post,
                    RequestUri = new Uri("https://ijcowa.azurewebsites.net/api/v1/token"),
                    Content = new StringContent(jsonString, Encoding.UTF8, "application/json")
                };

            // Send the request and get the response
            var response = await HttpClient.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                // Deserialize responseContent if necessary using System.Text.Json.JsonSerializer
                // For example: var data = System.Text.Json.JsonSerializer.Deserialize<ResponseData>(responseContent);
            }
            else
            {
                // Handle the error, for example, show a validation message
            }
        }
        catch (Exception ex)
        {
            // Handle the exception, for example, log it
        }
    }

    private class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
